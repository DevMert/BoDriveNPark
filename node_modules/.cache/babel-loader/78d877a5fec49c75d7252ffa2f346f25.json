{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Daniel\\\\react-workspace\\\\BoDriveNPark\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\react-workspace\\\\BoDriveNPark\\\\src\\\\components\\\\FaecherContainer.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  \\n  text-align: center;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 10%;\\n  min-height: 150px;\\n  list-style: none; \\n  padding-left: 0;\\n  border: 5px solid black;\\n  \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { GithubPicker } from 'react-color';\nimport Fach from './Fach';\nconst UnsortedList = styled.ul(_templateObject());\nconst ListElement = styled.div(_templateObject2());\n/**\r\n * Diese Funktion gibt die Componente mit einer Liste aller Fächer aus.\r\n * Dabei wird über alle Fächer anhand von props.faecher.map itteriert\r\n * und so jedes Fach, welches sich in dem State \"faecher\" der Klasse Faecher\r\n * befindet, in die Liste eingefuegt\r\n */\n\nfunction FachListe(props) {\n  console.log(props.faecher);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(UnsortedList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, props.faecher.map(fach => React.createElement(\"li\", {\n    key: fach.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ListElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, fach.name))))));\n}\n\nclass Faecher extends Component {\n  constructor(props) {\n    super(props); //Das muss hier IMMER als erstes im Konstruktor stehen\n\n    this.handleChangeComplete = color => {\n      this.setState({\n        choosenColor: color.hex\n      });\n    };\n\n    this.state = {\n      faecher: [],\n      input: '',\n      choosenColor: ''\n    };\n    this.updateInput = this.updateInput.bind(this);\n    this.handleFachHinzufuegen = this.handleFachHinzufuegen.bind(this);\n    this.handleChangeComplete = this.handleChangeComplete.bind(this);\n  }\n  /**\r\n   * Diese Funktion reagiert auf den Tastendruck der Tastatur, wenn man sich\r\n   * im Textfeld für das hinzufügen der Fächer befindet. Ohne die würde das \r\n   * Textfeld leer bleiben bei Tastendruck.\r\n   */\n\n\n  updateInput(event) {\n    const value = event.target.value;\n    this.setState(() => {\n      return {\n        input: value\n      };\n    });\n  }\n\n  /**\r\n   * Bei Druck auf den \"+-Button\" wird diese Funktion ausgelöst\r\n   */\n  handleFachHinzufuegen() {\n    this.setState(currentState => {\n      /*Die if-Abfrage prüft ob das Eingabefeld leer ist, \r\n      um leere Listeneinträge zu vermeiden */\n      if (currentState.input !== '') {\n        return {\n          faecher: currentState.faecher.concat([{\n            name: currentState.input\n          }]),\n          input: ''\n        };\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(GithubPicker, {\n      width: 100,\n      triangle: \"hide\",\n      onChangeComplete: this.handleChangeComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Fach hinzuf\\xFCgen\",\n      value: this.state.input,\n      onChange: this.updateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleFachHinzufuegen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" + \"), React.createElement(FachListe, {\n      faecher: this.state.faecher,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Fach, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Faecher;","map":{"version":3,"sources":["C:\\Users\\Daniel\\react-workspace\\BoDriveNPark\\src\\components\\FaecherContainer.js"],"names":["React","Component","styled","GithubPicker","Fach","UnsortedList","ul","ListElement","div","FachListe","props","console","log","faecher","map","fach","name","Faecher","constructor","handleChangeComplete","color","setState","choosenColor","hex","state","input","updateInput","bind","handleFachHinzufuegen","event","value","target","currentState","concat","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport { GithubPicker } from 'react-color';\r\nimport Fach from './Fach'\r\n\r\n\r\nconst UnsortedList = styled.ul `\r\n  width: 10%;\r\n  min-height: 150px;\r\n  list-style: none; \r\n  padding-left: 0;\r\n  border: 5px solid black;\r\n  \r\n`\r\n\r\nconst ListElement = styled.div `\r\n  \r\n  text-align: center;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n`\r\n\r\n\r\n/**\r\n * Diese Funktion gibt die Componente mit einer Liste aller Fächer aus.\r\n * Dabei wird über alle Fächer anhand von props.faecher.map itteriert\r\n * und so jedes Fach, welches sich in dem State \"faecher\" der Klasse Faecher\r\n * befindet, in die Liste eingefuegt\r\n */\r\nfunction FachListe (props) {\r\n  \r\n  console.log(props.faecher)\r\n\r\n  return (\r\n    <div>\r\n      <UnsortedList>\r\n        {props.faecher.map((fach) => \r\n          <li key = {fach.name}>\r\n            <ListElement>\r\n              <span>{fach.name}</span>\r\n            </ListElement>\r\n          </li>        \r\n        )}\r\n      </UnsortedList>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Faecher extends Component {\r\n  constructor(props) {\r\n    super(props); //Das muss hier IMMER als erstes im Konstruktor stehen\r\n\r\n    this.state = {\r\n      faecher: [],\r\n      input: '',\r\n      choosenColor: '',\r\n    }\r\n\r\n    this.updateInput = this.updateInput.bind(this)\r\n    this.handleFachHinzufuegen = this.handleFachHinzufuegen.bind(this)\r\n    this.handleChangeComplete = this.handleChangeComplete.bind(this)\r\n  }\r\n\r\n  /**\r\n   * Diese Funktion reagiert auf den Tastendruck der Tastatur, wenn man sich\r\n   * im Textfeld für das hinzufügen der Fächer befindet. Ohne die würde das \r\n   * Textfeld leer bleiben bei Tastendruck.\r\n   */\r\n  updateInput (event) {\r\n    const value = event.target.value\r\n\r\n    this.setState(() => {\r\n      return {input: value}\r\n    })\r\n  }\r\n\r\n\r\n  handleChangeComplete = (color) => {\r\n    this.setState({choosenColor: color.hex})\r\n  }\r\n\r\n  /**\r\n   * Bei Druck auf den \"+-Button\" wird diese Funktion ausgelöst\r\n   */\r\n  handleFachHinzufuegen() {\r\n    \r\n    this.setState((currentState) => {\r\n      /*Die if-Abfrage prüft ob das Eingabefeld leer ist, \r\n      um leere Listeneinträge zu vermeiden */\r\n      if(currentState.input !== '') {\r\n        return {\r\n          faecher: currentState.faecher.concat([{\r\n            name: currentState.input,\r\n            \r\n          }]),\r\n          input: ''\r\n        }\r\n      }     \r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/*Componente zum auswählen der Farbe fürs Fach */}\r\n        <GithubPicker \r\n          width = {100}\r\n          triangle={\"hide\"}\r\n          onChangeComplete={ this.handleChangeComplete }\r\n        />\r\n        <input \r\n          type = 'text'\r\n          placeholder = 'Fach hinzufügen'\r\n          value = {this.state.input}\r\n          onChange={this.updateInput}\r\n        />\r\n        <button onClick={this.handleFachHinzufuegen}> + </button>\r\n        <FachListe \r\n          faecher = {this.state.faecher}              \r\n        />\r\n        <Fach/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Faecher;"]},"metadata":{},"sourceType":"module"}