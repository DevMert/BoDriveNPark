{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Daniel\\\\react-workspace\\\\BoDriveNPark\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\react-workspace\\\\BoDriveNPark\\\\src\\\\components\\\\Faecher.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  background-color: \\\"#blue\\\";\\n  text-align: center;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 10%;\\n  min-height: 150px;\\n  list-style: none; \\n  padding-left: 0;\\n  border: 5px solid black;\\n  \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { GithubPicker } from 'react-color';\nconst UnsortedList = styled.ul(_templateObject());\nconst ListElement = styled.div(_templateObject2());\n/**\r\n * Diese Funktion gibt die Componente mit einer Liste aller Fächer aus.\r\n * Dabei wird über alle Fächer anhand von props.faecher.map itteriert\r\n * und so jedes Fach, welches sich in dem State \"faecher\" der Klasse Faecher\r\n * befindet, in die Liste eingefuegt\r\n */\n\nfunction FachListe(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(UnsortedList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.faecher.map(fach => React.createElement(\"li\", {\n    key: fach,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ListElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, fach))))));\n}\n\nclass Faecher extends Component {\n  constructor(props) {\n    super(props); //Das muss hier IMMER als erstes im Konstruktor stehen\n\n    this.state = {\n      faecher: [],\n      farbe: '',\n      input: ''\n    };\n    this.updateInput = this.updateInput.bind(this);\n    this.handleFachHinzufuegen = this.handleFachHinzufuegen.bind(this);\n  }\n  /**\r\n   * Diese Funktion reagiert auf den Tastendruck der Tastatur, wenn man sich\r\n   * im Textfeld für das hinzufügen der Fächer befindet. Ohne die würde das \r\n   * Textfeld leer bleiben bei Tastendruck.\r\n   */\n\n\n  updateInput(e) {\n    const value = e.target.value;\n    this.setState(() => {\n      return {\n        input: value\n      };\n    });\n  }\n  /**\r\n   * Bei Druck auf den \"+-Button\" wird diese Funktion ausgelöst\r\n   */\n\n\n  handleFachHinzufuegen() {\n    this.setState(currentState => {\n      /*Die if-Abfrage prüft ob das Eingabefeld leer ist, \r\n      um leere Listeneinträge zu vermeiden */\n      if (currentState.input !== '') {\n        return {\n          faecher: currentState.faecher.concat(currentState.input),\n          input: ''\n        };\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(GithubPicker, {\n      width: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Fach hinzuf\\xFCgen\",\n      value: this.state.input,\n      onChange: this.updateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleFachHinzufuegen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" + \"), React.createElement(FachListe, {\n      faecher: this.state.faecher,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Faecher;","map":{"version":3,"sources":["C:\\Users\\Daniel\\react-workspace\\BoDriveNPark\\src\\components\\Faecher.js"],"names":["React","Component","styled","GithubPicker","UnsortedList","ul","ListElement","div","FachListe","props","faecher","map","fach","Faecher","constructor","state","farbe","input","updateInput","bind","handleFachHinzufuegen","e","value","target","setState","currentState","concat","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,aAA7B;AAGA,MAAMC,YAAY,GAAGF,MAAM,CAACG,EAAV,mBAAlB;AASA,MAAMC,WAAW,GAAGJ,MAAM,CAACK,GAAV,oBAAjB;AAMA;;;;;;;AAMA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAEzB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAmBC,IAAD,IACjB;AAAI,IAAA,GAAG,EAAIA,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAP,CADF,CADF,CADD,CADH,CADF,CADF;AAaD;;AAED,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAC9Ba,EAAAA,WAAW,CAACL,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CACH;;AAEd,SAAKM,KAAL,GAAa;AACXL,MAAAA,OAAO,EAAE,EADE;AAEXM,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACD;AAED;;;;;;;AAKAD,EAAAA,WAAW,CAAEG,CAAF,EAAK;AACd,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AAEA,SAAKE,QAAL,CAAc,MAAM;AAClB,aAAO;AAACP,QAAAA,KAAK,EAAEK;AAAR,OAAP;AACD,KAFD;AAGD;AAED;;;;;AAGAF,EAAAA,qBAAqB,GAAG;AACtB,SAAKI,QAAL,CAAeC,YAAD,IAAkB;AAC9B;;AAEA,UAAGA,YAAY,CAACR,KAAb,KAAuB,EAA1B,EAA8B;AAC5B,eAAO;AACLP,UAAAA,OAAO,EAAEe,YAAY,CAACf,OAAb,CAAqBgB,MAArB,CAA4BD,YAAY,CAACR,KAAzC,CADJ;AAELA,UAAAA,KAAK,EAAE;AAFF,SAAP;AAID;AACF,KATD;AAUD;;AAIDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAI,GADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE;AACE,MAAA,IAAI,EAAG,MADT;AAEE,MAAA,WAAW,EAAG,oBAFhB;AAGE,MAAA,KAAK,EAAI,KAAKZ,KAAL,CAAWE,KAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKC,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAWE;AAAQ,MAAA,OAAO,EAAE,KAAKE,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,EAYE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAI,KAAKL,KAAL,CAAWL,OADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAkBD;;AAhE6B;;AAmEhC,eAAeG,OAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport { GithubPicker } from 'react-color';\r\n\r\n\r\nconst UnsortedList = styled.ul `\r\n  width: 10%;\r\n  min-height: 150px;\r\n  list-style: none; \r\n  padding-left: 0;\r\n  border: 5px solid black;\r\n  \r\n`\r\n\r\nconst ListElement = styled.div `\r\n  background-color: \"#blue\";\r\n  text-align: center;\r\n`\r\n\r\n\r\n/**\r\n * Diese Funktion gibt die Componente mit einer Liste aller Fächer aus.\r\n * Dabei wird über alle Fächer anhand von props.faecher.map itteriert\r\n * und so jedes Fach, welches sich in dem State \"faecher\" der Klasse Faecher\r\n * befindet, in die Liste eingefuegt\r\n */\r\nfunction FachListe (props) {\r\n  \r\n  return (\r\n    <div>\r\n      <UnsortedList>\r\n        {props.faecher.map((fach) => \r\n          <li key = {fach}>\r\n            <ListElement>\r\n              <span>{fach}</span>\r\n            </ListElement>\r\n          </li>        \r\n        )}\r\n      </UnsortedList>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Faecher extends Component {\r\n  constructor(props) {\r\n    super(props); //Das muss hier IMMER als erstes im Konstruktor stehen\r\n\r\n    this.state = {\r\n      faecher: [],\r\n      farbe: '',\r\n      input: '',\r\n    }\r\n\r\n    this.updateInput = this.updateInput.bind(this)\r\n    this.handleFachHinzufuegen = this.handleFachHinzufuegen.bind(this)\r\n  }\r\n\r\n  /**\r\n   * Diese Funktion reagiert auf den Tastendruck der Tastatur, wenn man sich\r\n   * im Textfeld für das hinzufügen der Fächer befindet. Ohne die würde das \r\n   * Textfeld leer bleiben bei Tastendruck.\r\n   */\r\n  updateInput (e) {\r\n    const value = e.target.value\r\n\r\n    this.setState(() => {\r\n      return {input: value}\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Bei Druck auf den \"+-Button\" wird diese Funktion ausgelöst\r\n   */\r\n  handleFachHinzufuegen() {\r\n    this.setState((currentState) => {\r\n      /*Die if-Abfrage prüft ob das Eingabefeld leer ist, \r\n      um leere Listeneinträge zu vermeiden */\r\n      if(currentState.input !== '') {\r\n        return {\r\n          faecher: currentState.faecher.concat(currentState.input),\r\n          input: ''\r\n        }\r\n      }     \r\n    })\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/*Componente zum auswählen der Farbe fürs Fach */}\r\n        <GithubPicker \r\n          width = {100}\r\n        />\r\n        <input \r\n          type = 'text'\r\n          placeholder = 'Fach hinzufügen'\r\n          value = {this.state.input}\r\n          onChange={this.updateInput}\r\n        />\r\n        <button onClick={this.handleFachHinzufuegen}> + </button>\r\n        <FachListe \r\n          faecher = {this.state.faecher}        \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Faecher;"]},"metadata":{},"sourceType":"module"}