{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Daniel\\\\react-workspace\\\\BoDriveNPark\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\react-workspace\\\\BoDriveNPark\\\\src\\\\components\\\\FaecherContainer.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  \\n  text-align: center;\\n  padding-top: 10px;\\n  padding-bottom: 10px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 15%;\\n  min-height: 150px;\\n  list-style: none; \\n  padding-left: 0;\\n  border: 2px solid black;\\n  \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport reactCSS from 'reactcss';\nimport Fach from './Fach';\nconst UnsortedList = styled.ul(_templateObject());\nconst ListElement = styled.div(_templateObject2());\n/**\r\n * Diese Funktion gibt die Componente mit einer Liste aller Fächer aus.\r\n * Dabei wird über alle Fächer anhand von props.faecher.map itteriert\r\n * und so jedes Fach, welches sich in dem State \"faecher\" der Klasse Faecher\r\n * befindet, in die Liste eingefuegt\r\n */\n\nfunction FachListe(props) {\n  const styles = reactCSS({\n    'default': {\n      button: {\n        position: 'absolute',\n        left: '50%'\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(UnsortedList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"+\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Fach, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Fach, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), props.faecher.map(fach => React.createElement(\"li\", {\n    key: fach.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ListElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, fach.name))))));\n}\n\nclass Faecher extends Component {\n  constructor(props) {\n    super(props); //Das muss hier IMMER als erstes im Konstruktor stehen\n\n    this.state = {\n      faecher: [],\n      input: ''\n    };\n    this.updateInput = this.updateInput.bind(this);\n    this.handleFachHinzufuegen = this.handleFachHinzufuegen.bind(this);\n  }\n  /**\r\n   * Diese Funktion reagiert auf den Tastendruck der Tastatur, wenn man sich\r\n   * im Textfeld für das hinzufügen der Fächer befindet. Ohne die würde das \r\n   * Textfeld leer bleiben bei Tastendruck.\r\n   */\n\n\n  updateInput(event) {\n    const value = event.target.value;\n    this.setState(() => {\n      return {\n        input: value\n      };\n    });\n  }\n  /**\r\n   * Bei Druck auf den \"+-Button\" wird diese Funktion ausgelöst\r\n   */\n\n\n  handleFachHinzufuegen() {\n    this.setState(currentState => {\n      /*Die if-Abfrage prüft ob das Eingabefeld leer ist, \r\n      um leere Listeneinträge zu vermeiden */\n      if (currentState.input !== '') {\n        return {\n          faecher: currentState.faecher.concat([{\n            name: currentState.input\n          }]),\n          input: ''\n        };\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Fach hinzuf\\xFCgen\",\n      value: this.state.input,\n      onChange: this.updateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleFachHinzufuegen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \" + \"), React.createElement(FachListe, {\n      faecher: this.state.faecher,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Faecher;","map":{"version":3,"sources":["C:\\Users\\Daniel\\react-workspace\\BoDriveNPark\\src\\components\\FaecherContainer.js"],"names":["React","Component","styled","reactCSS","Fach","UnsortedList","ul","ListElement","div","FachListe","props","styles","button","position","left","faecher","map","fach","name","Faecher","constructor","state","input","updateInput","bind","handleFachHinzufuegen","event","value","target","setState","currentState","concat","render"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAGA,MAAMC,YAAY,GAAGH,MAAM,CAACI,EAAV,mBAAlB;AASA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAV,oBAAjB;AAQA;;;;;;;AAMA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAEzB,QAAMC,MAAM,GAAGR,QAAQ,CAAC;AACtB,eAAW;AACTS,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE,UADJ;AAENC,QAAAA,IAAI,EAAE;AAFA;AADC;AADW,GAAD,CAAvB;AASA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAKH,MAAM,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,CAHF,EAIGF,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAmBC,IAAD,IACjB;AAAI,IAAA,GAAG,EAAIA,IAAI,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAI,CAACC,IAAZ,CADF,CADF,CADD,CAJH,CAFF,CADF;AAiBD;;AAED,MAAMC,OAAN,SAAsBlB,SAAtB,CAAgC;AAC9BmB,EAAAA,WAAW,CAACV,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CACH;;AAEd,SAAKW,KAAL,GAAa;AACXN,MAAAA,OAAO,EAAE,EADE;AAEXO,MAAAA,KAAK,EAAE;AAFI,KAAb;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACD;AAED;;;;;;;AAKAD,EAAAA,WAAW,CAAEG,KAAF,EAAS;AAClB,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;AAEA,SAAKE,QAAL,CAAc,MAAM;AAClB,aAAO;AAACP,QAAAA,KAAK,EAAEK;AAAR,OAAP;AACD,KAFD;AAGD;AAED;;;;;AAGAF,EAAAA,qBAAqB,GAAG;AAEtB,SAAKI,QAAL,CAAeC,YAAD,IAAkB;AAC9B;;AAEA,UAAGA,YAAY,CAACR,KAAb,KAAuB,EAA1B,EAA8B;AAC5B,eAAO;AACLP,UAAAA,OAAO,EAAEe,YAAY,CAACf,OAAb,CAAqBgB,MAArB,CAA4B,CAAC;AACpCb,YAAAA,IAAI,EAAEY,YAAY,CAACR;AADiB,WAAD,CAA5B,CADJ;AAKLA,UAAAA,KAAK,EAAE;AALF,SAAP;AAOD;AACF,KAZD;AAaD;;AAEDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AACE,MAAA,IAAI,EAAG,MADT;AAEE,MAAA,WAAW,EAAG,oBAFhB;AAGE,MAAA,KAAK,EAAI,KAAKX,KAAL,CAAWC,KAHtB;AAIE,MAAA,QAAQ,EAAE,KAAKC,WAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAQE;AAAQ,MAAA,OAAO,EAAE,KAAKE,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,EASE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAI,KAAKJ,KAAL,CAAWN,OADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAgBD;;AAhE6B;;AAmEhC,eAAeI,OAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport styled from 'styled-components'\r\nimport reactCSS from 'reactcss'\r\nimport Fach from './Fach'\r\n\r\n\r\nconst UnsortedList = styled.ul `\r\n  width: 15%;\r\n  min-height: 150px;\r\n  list-style: none; \r\n  padding-left: 0;\r\n  border: 2px solid black;\r\n  \r\n`\r\n\r\nconst ListElement = styled.div `\r\n  \r\n  text-align: center;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n`\r\n\r\n\r\n/**\r\n * Diese Funktion gibt die Componente mit einer Liste aller Fächer aus.\r\n * Dabei wird über alle Fächer anhand von props.faecher.map itteriert\r\n * und so jedes Fach, welches sich in dem State \"faecher\" der Klasse Faecher\r\n * befindet, in die Liste eingefuegt\r\n */\r\nfunction FachListe (props) {\r\n  \r\n  const styles = reactCSS({\r\n    'default': {\r\n      button: {\r\n        position: 'absolute',\r\n        left: '50%',\r\n      },\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <UnsortedList>\r\n        <button style = { styles.button }>+</button>\r\n        <li><Fach/></li>\r\n        <li><Fach/></li>\r\n        {props.faecher.map((fach) => \r\n          <li key = {fach.name}>\r\n            <ListElement>\r\n              <span>{fach.name}</span>\r\n            </ListElement>\r\n          </li>        \r\n        )}\r\n      </UnsortedList>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Faecher extends Component {\r\n  constructor(props) {\r\n    super(props); //Das muss hier IMMER als erstes im Konstruktor stehen\r\n\r\n    this.state = {\r\n      faecher: [],\r\n      input: '',\r\n      \r\n    }\r\n\r\n    this.updateInput = this.updateInput.bind(this)\r\n    this.handleFachHinzufuegen = this.handleFachHinzufuegen.bind(this)\r\n  }\r\n\r\n  /**\r\n   * Diese Funktion reagiert auf den Tastendruck der Tastatur, wenn man sich\r\n   * im Textfeld für das hinzufügen der Fächer befindet. Ohne die würde das \r\n   * Textfeld leer bleiben bei Tastendruck.\r\n   */\r\n  updateInput (event) {\r\n    const value = event.target.value\r\n\r\n    this.setState(() => {\r\n      return {input: value}\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Bei Druck auf den \"+-Button\" wird diese Funktion ausgelöst\r\n   */\r\n  handleFachHinzufuegen() {\r\n    \r\n    this.setState((currentState) => {\r\n      /*Die if-Abfrage prüft ob das Eingabefeld leer ist, \r\n      um leere Listeneinträge zu vermeiden */\r\n      if(currentState.input !== '') {\r\n        return {\r\n          faecher: currentState.faecher.concat([{\r\n            name: currentState.input,\r\n            \r\n          }]),\r\n          input: ''\r\n        }\r\n      }     \r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <input \r\n          type = 'text'\r\n          placeholder = 'Fach hinzufügen'\r\n          value = {this.state.input}\r\n          onChange={this.updateInput}\r\n        />\r\n        <button onClick={this.handleFachHinzufuegen}> + </button>\r\n        <FachListe \r\n          faecher = {this.state.faecher}              \r\n        />\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Faecher;"]},"metadata":{},"sourceType":"module"}